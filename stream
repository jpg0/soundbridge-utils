#!/bin/bash
dst=$1
shift

shopt -qs extglob

case "$dst" in
    preset|from|power|whois|playing)
        # These take arguments other than pulseaudio input sinks
        ;;
    ?([+-])+([0-9]))
        vol="$dst"
        dst="vol"
        ;;
    vol)
        vol=$1
        ;;
    *)
        src=$1
        src_default=spotify

        # Find the source asked for, or our default if none was asked for.  Set
        # src to how we found the input, if we found it.
        inputidx=$(find-sink-input "${src:-$src_default}")
        [[ -n $inputidx ]] && src=${src:-$src_default}

        # If nothing was asked for and we couldn't find the default either, see
        # if there are *any* inputs available.  Set our src to distinguish it's
        # fallback status in messages.
        if [[ -z $inputidx && -z $src ]]; then
            inputidx=$(find-sink-input)
            src="whatever's playing"
        fi

        # Still found nothing!
        if [[ -z $inputidx ]]; then
            echo "Unable to find sink input index for $src"
            exit 1
        fi
        shift
        ;;
esac

function move_to_sink() {
    # takes only a sink
    echo "Streaming $src ($inputidx) to $dst ($1)"
    pactl move-sink-input $inputidx $1
}

case "$dst" in
    home|soundbridge|sb)
        sink='streaming'
        pacmd set-sink-mute $sink 0 >/dev/null
        pacmd set-source-mute $sink.monitor 0 >/dev/null
        soundbridge-upnp-play $sink
        move_to_sink $sink
        ;;
    bps|work|office)
        sink='raop.Conference-Room.local'
        gconftool -s --type bool /system/pulseaudio/modules/raop-discover/enabled true
        sleep 5
        pacmd set-sink-mute $sink 0 >/dev/null
        move_to_sink $sink
        ;;
    preset)
        play-preset "$@"
        exit
        ;;
    vol)
        soundbridge-volume "$vol"
        exit
        ;;
    whois|playing)
        soundbridge-whois
        exit
        ;;
    alsa|local|hw|off|stop)
        move_to_sink 0
        gconftool -s --type bool /system/pulseaudio/modules/raop-discover/enabled false
        ;;
    power)
        case $1 in
            off|stop)
                soundbridge-rcp "SetPowerState standby"
                ;;
            reboot)
                soundbridge-rcp "Reboot"
                ;;
            *)
                soundbridge-rcp "IrDispatchCommand CK_POWER"
                ;;
        esac
        ;;
    from)
        if [[ $1 == "home" ]]; then
            echo "Proxying to bloop; connect to localhost:3689"
            banshee >/dev/null 2>&1 &
            ssh -NL 3689:localhost:3689 bloop.zulutango.org
            exit
        fi
        ;&
    *)
        echo "Uh, what?"
        exit 1
        ;;
esac

