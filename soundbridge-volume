#!/usr/bin/env perl
use strict;
use warnings;
use open qw/ :utf8 :std /;
use utf8;
use feature 'say';
use experimental 'switch';

use Soundbridge;

my $sb     = Soundbridge->new( timeout => 0.2 );
my $volume = shift @ARGV;

my $attempt = 1;
my $current;
while (not defined $current or $attempt <= 3) {
    ($current) = $sb->get("Volume");
    $attempt++;
}

if (defined $volume and $volume =~ /^([+-])(\d+)$/) {
    die "ðŸ˜ž  I couldnâ€™t get the current volume to adjust!\n"
        if not defined $current;
 
    my ($op, $amount) = ($1, $2);
    $volume = $current;
    given ($op) {
        $volume -= $amount when "-";
        $volume += $amount when "+";
    }
}

$current //= 0;

if (defined $volume and $volume =~ /^\d+$/ and $volume != $current) {
    say "$current â†’ $volume";
    my ($result) = $sb->set("Volume", $volume);
    unless ($result and $result eq "OK") {
        warn "ðŸ˜ž  Something didn't work, try again?\n";
        warn "  result = $result\n";
    }
} else {
    say $current;
}
